ophren<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
explot<-list()
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
}
ophren
View(ophren)
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
read.csv(paste0("data//WRDataUTF8//", theFiles[n]))
}
ophren<-list()
datalist<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
type  <-c()
warm  <-c()
y     <-c()
arealist<-list()
st<- explot[[theFiles[109]]][,1][area]
print(area)
countoften<-0
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
if(as.integer(n/12) > countoften){
countoften<-countoften+1
}
numstr<-as.character(as.integer(n/12))
ophren[[y[n]]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
arealist[[numstr]][[y[n]]]<-ophren
type  <-c()
warm  <-c()
y     <-c()
}
datalist[[st]]<-arealist
}
View(datalist)
ophren<-list()
datalist<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
type  <-c()
warm  <-c()
y     <-c()
arealist<-list()
st<- explot[[theFiles[109]]][,1][area]
print(area)
countoften<-0
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
if(as.integer(n/12) > countoften){
countoften<-countoften+1
}
numstr<-as.character(as.integer(n/12))
ophren[[y[n]]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
arealist[[numstr]][y[n]]<-ophren
type  <-c()
warm  <-c()
y     <-c()
}
datalist[[st]]<-arealist
}
warnings()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
type  <-c()
warm  <-c()
y     <-c()
arealist<-list()
st<- explot[[theFiles[109]]][,1][area]
print(area)
countoften<-0
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
if(as.integer(n/12) > countoften){
countoften<-countoften+1
}
numstr<-as.character(as.integer(n/12))
ophren[[y[n]]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
arealist[[numstr]][[substring(theFiles[n],4,9)]]<-ophren
type  <-c()
warm  <-c()
y     <-c()
}
datalist[[st]]<-arealist
}
View(datalist)
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
type  <-c()
warm  <-c()
y     <-c()
arealist<-list()
st<- explot[[theFiles[109]]][,1][area]
print(area)
countoften<-0
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
if(as.integer(n/12) > countoften){
countoften<-countoften+1
numstr<-as.character(as.integer(n/12))
ophren<- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
arealist[[numstr]]<-ophren
type  <-c()
warm  <-c()
y     <-c()
}
}
datalist[[st]]<-arealist
}
View(datalist)
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
read.csv(paste0("data//WRDataUTF8//", theFiles[n]))
}
ophren<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
explot<-list()
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
}
View(ophren)
runApp('~/Documents/R/BetterLiveCityT')
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
read.csv(paste0("data//WRDataUTF8//", theFiles[n]))
}
ophren<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
explot<-list()
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
}
shiny::runApp('~/Documents/R/BetterLiveCityT')
install.packages("ggplot2")
install.packages("ggplot2")
runApp('~/Documents/R/BetterLiveCityT')
runApp('~/Documents/R/BetterLiveCityT')
runApp('~/Documents/R/BetterLiveCityT')
runApp('~/Documents/R/BetterLiveCityT')
install.packages("data.table")
library("data.table")
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
fread(paste0("data//WRDataUTF8//", theFiles[n]))
}
explot
View(explot)
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
fread(paste0("data//WRDataUTF8//", theFiles[n]))
}
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
fread(paste0("data//WRDataUTF8//", theFiles[n]))
}
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
fread(paste0("data//WRDataUTF8//", theFiles[n]))
}
View(explot)
str_detect(theFiles,'2018')
library("stringr")
str_detect(theFiles,'2018')
View(explot[grepl('2018',Name)])
View(explot[])
explot
explot[1]
explot[,1]
explot[[1]]
explot[[,1]]
explot[[1]][`1`]
explot[[1]][1]
View(explot[grepl('2018',attributes(explot)])
View(explot[grepl('2018',attributes(explot))])
attributes(explot)
grepl('2018',attributes(explot))
View(explot[grepl('2018',names(explot))])
View(explot[grepl('2018',names(explot))])
library("data.table")
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
fread(paste0("data//WRDataUTF8//", theFiles[n]))
}
ophren<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
explot<-list()
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.frame(
TIME = y,
TAVE = type,
CHA  = warm
)
}
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
explot<-list()
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.table(
TIME = y,
TAVE = type,
CHA  = warm
)
}
st
ophren[[st]]
View(ophren[[st]])
library("data.table")
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
fread(paste0("data//WRDataUTF8//", theFiles[n]))
}
ophren<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
explot<-list()
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.table(
TIME = y,
TAVE = type,
CHA  = warm
)
}
ophren[[st]]
View(ophren[[st]])
View(ophren[[st]])
ophren[[st]][grepl('2018',TIME)]
ophren[[st]][grepl("2018",TIME)]
ophren[[st]]["2018",TIME]
ophren[[st]][grepl("2018",TIME)]
ophren[st][grepl("2018",TIME)]
ophren[[st]][grepl("2018",TIME)]
ophren[[st]]
ophren[grepl("2018",TIME)]
t <-ophren[[st]]
t[grepl("2018",TIME)]
library("data.table")
require(ggplot2)
theFiles <- dir("data//WRDataUTF8", pattern = "\\.csv")
explot <- list()
for (n in c(1:length(theFiles))) {
explot[[theFiles[n]]] <-
read.csv(paste0("data//WRDataUTF8//", theFiles[n]))
}
ophren<-list()
for ( area in c(1:length(explot[[theFiles[109]]][,1]))) {
type  <-c()
warm  <-c()
y     <-c()
for(n in c(1:length(theFiles))){
explot[[theFiles[n]]]<-read.csv(paste0("data//WRDataUTF8//", theFiles[n]), stringsAsFactors = FALSE )
ifelse(is.null(explot[[theFiles[n]]][area,2]),type[n] <-c(0),type[n] <-c(explot[[theFiles[n]]][area,2]))
ifelse(is.null(explot[[theFiles[n]]][area,8]),warm[n] <-c(0),warm[n] <-c(explot[[theFiles[n]]][area,8]))
ifelse(is.null(substring(theFiles[n],4,9)),y[n] <-c(0),y[n] <-substring(theFiles[n],4,9))
}
st<- explot[[theFiles[109]]][,1][area]
ophren[[st]] <- data.table(
TIME = y,
TAVE = type,
CHA  = warm
)
print(ophren[[st]])
}
ggplot(ophren[['竹子湖']][grepl('2014',TIME)], aes(x = ophren[['竹子湖']][grepl('2014',TIME)]$TIME, y = ophren[['竹子湖']][grepl('2014',TIME)]$TAVE)) + geom_bar(stat ="identity",width=0.5, fill = "#33CCFF")+geom_text(mapping = aes(label= ophren[['竹子湖']][grepl('2014',TIME)]$TAVE),color ="orange",vjust = -0.5, size = 5)+geom_line()+labs( x="溫度", y="月份")+theme(axis.title.y = element_text(angle = 0, family = "宋體-繁 細體"),
axis.text.x = element_text(angle = 60, family = "宋體-繁 細體", hjust = 1),
axis.title.x = element_text(family = "宋體-繁 細體"))
ggplot(ophren[['竹子湖']][grepl('2014',TIME)], aes(x = ophren[['竹子湖']][grepl('2014',TIME)]$TIME, y = ophren[['竹子湖']][grepl('2014',TIME)]$TAVE)) + geom_bar(stat ="identity",width=0.5, fill = "#33CCFF")+geom_text(mapping = aes(label= ophren[['竹子湖']][grepl('2014',TIME)]$TAVE),color ="orange",vjust = -0.5, size = 5)+geom_line()+labs( x="溫度", y="月份")+theme(axis.title.y = element_text(angle = 0, family = "宋體-繁 細體"),
axis.text.x = element_text(angle = 60, family = "宋體-繁 細體", hjust = 1),
axis.title.x = element_text(family = "宋體-繁 細體"))
minlist2017 <-c()
date2017 <- c()
abs2017<-c()
for(a in  c(1:length(explot[[theFiles[109]]][,1]))){
abs2017[a]    <- abs(ophren[[a]][grepl("2017",TIME),min(CHA)]- 50)
minlist2017[a]<-ophren[[a]][grepl("2017",TIME),min(CHA)]
date2017[a] <- explot[[theFiles[109]]][,1][a]
}
data2017 <- data.table(
ABS = abs2017,
CHA =minlist2017,
AERA = date2017
)
ophren[[1]][grepl("2017",TIME),min(CHA)]
ophren[[1]][grepl("2017",TIME),CHA]
ophren[[1]][grepl("2017",TIME),mean(CHA)]
c(1:length(explot[[theFiles[109]]][,1]))
substring(theFiles[n],4,9)
substring(theFiles[n],4,7)
unique(substring(theFiles,4,7))
meanvector <-c()
datevector <- c()
absvector<-c()
for(a in  c(1:length(explot[[theFiles[109]]][,1]))){
for (month in unique(substring(theFiles,4,7))) {
absvector[a]    <- abs(ophren[[a]][grepl(month,TIME),mean(CHA)]- 50)
meanvector[a]<-ophren[[a]][grepl(month,TIME),mean(CHA)]
datevector[a] <- explot[[theFiles[109]]][,1][a]
}
}
datavector <- data.table(
ABS = absvector,
CHA =meanvector,
AERA = datevector
)
View(datavector)
meanvector <-c()
datevector <- c()
absvector<-c()
for(a in  c(1:length(explot[[theFiles[109]]][,1]))){
for (month in unique(substring(theFiles,4,7))) {
absvector[month,a]    <- abs(ophren[[a]][grepl(month,TIME),mean(CHA)]- 50)
meanvector[month,a]<-ophren[[a]][grepl(month,TIME),mean(CHA)]
datevector[month,a] <- explot[[theFiles[109]]][,1][a]
}
}
meanvector <-c()
datevector <- c()
absvector<-c()
for(a in  c(1:length(explot[[theFiles[109]]][,1]))){
for (month in unique(substring(theFiles,4,7))) {
absvector[month][a]    <- abs(ophren[[a]][grepl(month,TIME),mean(CHA)]- 50)
meanvector[month][a]<-ophren[[a]][grepl(month,TIME),mean(CHA)]
datevector[month][a] <- explot[[theFiles[109]]][,1][a]
}
}
warnings()
meanvector <-c()
datevector <- c()
absvector<-c()
datalist <- list()
for(a in  c(1:length(explot[[theFiles[109]]][,1]))){
for (dateyear in unique(substring(theFiles,4,7))) {
absvector[a]    <- abs(ophren[[a]][grepl(dateyear,TIME),mean(CHA)]- 50)
meanvector[a]<-ophren[[a]][grepl(dateyear,TIME),mean(CHA)]
datevector[a] <- explot[[theFiles[109]]][,1][a]
datavector<-data.table(
ABS = absvector,
CHA =meanvector,
AERA = datevector
)
datalist[[dateyear]] <-datavector
}
}
View(datalist)
for(dateyear in unique(substring(theFiles,4,7))){
meanvector <-c()
datevector <- c()
absvector<-c()
for (a in  c(1:length(explot[[theFiles[109]]][,1]))) {
absvector[a]    <- abs(ophren[[a]][grepl(dateyear,TIME),mean(CHA)]- 50)
meanvector[a]<-ophren[[a]][grepl(dateyear,TIME),mean(CHA)]
datevector[a] <- explot[[theFiles[109]]][,1][a]
datavector<-data.table(
ABS = absvector,
CHA =meanvector,
AERA = datevector
)
}
datalist[[dateyear]] <-datavector
}
View(datalist)
datalist[[input$tvSelectDATE]][order(ABS)]$AERA
datalist[[1]][order(ABS)]$AERA
datalist[[1]][order(ABS)]
datalist[[1]][order(ABS)]["阿里山"]
datalist[[1]][order(ABS)]
datalist[[1]][order(ABS)]$AERA
class(datalist[[1]][order(ABS)])
class(datalist[[1]][order(ABS),CHA])
datalist[[1]][order(ABS),CHA]
datalist[[1]][order(ABS),.(AREA,CHA)]
datalist[[1]][order(ABS),.(AERA,CHA)]
datalist[[1]][order(ABS),.(AERA,CHA)][阿里山]
datalist[[1]][order(ABS),.(AERA,CHA)]$阿里山
datalist[[1]][order(ABS),.(AERA,CHA)][["阿里山"]]
datalist[[1]][order(ABS),.(AERA,CHA)][,"阿里山"]
class(datalist[[1]][order(ABS),.(AERA,CHA)])
datalist[[1]][order(ABS),.(AERA,CHA)][grepl("阿里山",AERA)]
datalist[[1]][grepl("阿里山",AERA)]
datalist[[1]][order(ABS),.(AERA,CHA)][grepl("阿里山",AERA)]
datalist[[1]][order(ABS),.(c(1:length(explot[[theFiles[109]]][,1])),AERA,CHA)]
datalist[[1]][order(ABS),.(c(1:length(explot[[theFiles[109]]][,1])),AERA,CHA)][grepl("阿里山",AERA)]
datalist[[2008]]
datalist[["2008"]]
datalist[[1]]
datalist[["2008"]]
datalist[["2008"]][mean(CHA)]
datalist[["2008"]][,mean(CHA)]
datalist[["2008"]][CHA]
datalist[["2008"]]
datalist[["2008"]][,mean(CHA)]
datalist[["2008"]][mean(CHA)]
datalist[["2008"]]
datalist[["2008"]]$CHA
datalist[["2008"]][,min(CHA)]
datalist[["2008"]][,max(CHA)]
datalist[["2008"]][max(CHA)]
datalist[["2008"]]
datalist[["2008"]][grepl("宜蘭",CHA)]
datalist[["2008"]][grepl("宜蘭",AERA)]
datalist[["2008"]][CHA>80]
datalist[["2008"]][CHA>80,AREA]
datalist[["2008"]][CHA>80,AERA]
datalist[["2008"]][CHA>80,mean(CHA)]
datalist[["2008"]][,mean(CHA)]
datalist[["2008"]][CHA>0 ,mean(CHA)]
datalist[["2008"]][CHA>0,order(CHA)]
datalist[["2008"]][order(CHA),.(c(1:29),CHA)]
datalist[["2008"]][order(CHA),.(c(1:29),CHA,AERA)]
datalist[["2008"]][order(CHA),.(rank=c(1:29),CHA,AERA)]
shiny::runApp('~/Documents/R/BetterLiveCityT 修改')
